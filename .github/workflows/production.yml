name: Build, test and release production

on:
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.17
      - name: Install eslint
        run: npm install eslint
      - name: Run lint
        run: npm run lint

  build-and-test:
    runs-on: ubuntu-20.04
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Test
        run: npm run test

  publish:
    runs-on: ubuntu-20.04
    needs: [lint, build-and-test]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: toska/suoritustarkistin:production
          push: true
          build-args: |
            BASE_PATH=/suoritustarkistin/
            NODE_ENV=production
          secrets: |
            "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_TOKEN }}"

  sentry-release:
    runs-on: ubuntu-latest
    needs: publish
    if: success()
    steps:
      - uses: actions/checkout@v3
      - name: Pull image and create a container
        run: docker create --name suotar toska/suoritustarkistin:production
      - name: Copy assets from the container
        run: docker cp suotar:/opt/app-root/src ./app
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_URL: ${{ secrets.SENTRY_URL }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
          set_commits: 'skip'
          sourcemaps: ./app
          url_prefix: '~/app'

  report_success:
    name: 'Report deployment success to Suotar-channel'
    runs-on: ubuntu-latest
    needs:
      - lint
      - build-and-test
      - publish
      - sentry-release
    if: success()
    steps:
      - name: 'Send notification to Slack'
        uses: UniversityOfHelsinkiCS/slackbot-action@v1.4.2
        with:
          webhook-url: ${{ secrets.SLACKBOT_URL }}
          message-type: deployment
          softa-url: https://opetushallinto.cs.helsinki.fi/suoritustarkistin/
          deployment-target: production

  report_failure:
    name: 'Report deployment failure to Suotar-channel'
    runs-on: ubuntu-latest
    needs:
      - lint
      - build-and-test
      - publish
    if: failure()
    steps:
      - name: 'Send notification to Slack'
        uses: UniversityOfHelsinkiCS/slackbot-action@v1.4.2
        with:
          webhook-url: ${{ secrets.SLACKBOT_URL }}
          message-type: deployment-failure
