{
    "AssessmentMissingAnEvaluationRule": "Assessment item does not have an evaluation rule.",
    "AssessmentTotalPointsCannotBeNegative": "Total points cannot be less than zero.",
    "AssessmentTotalPointsCannotExceedRuleMaxPoints": "Total points cannot exceed the maximum.",
    "DateOfBirthIsMandatory": "Date of birth is required.",
    "PersonalIdentityCodeIsMandatoryForFinnishStudents": "Personal identity code is required for students with Finnish citizenship",
    "Resource ID must be defined for non-global access permissions": "Resource ID must be defined for non-global permissions.",
    "Resource ID not allowed for global access permissions": "Resource ID cannot be given to global permissions.",
    "Start date must be before end date": "Start date cannot be after the end date.",
    "Start or end date is required for access permissions": "Access permissions require a start or end date.",
    "evaluationGradeLimitGradeIdCannotBeNullWhenPointsUsedForEvaluation": "If grading is done by using points instead of grades, a grade ID is required.",
    "end has to be later than start": "End year must be later than the start year",
    "evaluationGradeLimitGradeMinLimitCannotBeGreaterThanMaxPointsUsedForEvaluation": "If grading is done by using points instead of grades, the minimum possible score cannot exceed the maximum score.",
    "evaluationGradeLimitGradeMinLimitCannotBeNullWhenPointsUsedForEvaluation": "If grading is done by using points instead of grades, a minimum score is required.",
    "evaluationGradeLimitGradeMinLimitCannotBeZero": "If grading is done by using points instead of grades, the minimum score must be more than zero.",
    "gradeLimitsCannotBeNullWhenPointsUsedForEvaluation": "If grading is done by using points instead of grades, evaluation scale limits are required.",
    "maxPointsCannotBeNullWhenPointsUsedForEvaluation": "If grading is done by using points instead of grades, a maximum score is required.",
    "min has to be less than or equal to max": "Minimum value must be equal to or less than the maximum value.",
    "recursUntil is mandatory if recursEvery is not NEVER": "Recurring events must have an end date.",
    "startDate has to be before endDate": "Start date must be before the end date.",
    "startDate has to be before or on endDate": "Start date must be the same as the end date or before the end date.",
    "text and personId cannot both be null": "Person or contact details required",
    "{education.structure.rules.not.found}": "Rules for the education structure not found",
    "{fi.helsinki.otm.common.model.module.DPSMBase.code}": "The given code is already in use. The code must be unique.",
    "{fi.helsinki.otm.common.model.module.DPSMBase.targetCreditsCreditRule}": "The credit minimum defined in the structure must be equal to or smaller than the extent defined in the module's basic information. The credit maximum must be equal to or bigger than the credit extent defined in the module's basic information.",
    "{fi.helsinki.otm.common.model.module.Education.code}": "Education code must be unique",
    "{fi.helsinki.otm.common.model.module.Education.rule}": "Degree programmes attached to the education do not match the structure of the education type",
    "{fi.helsinki.otm.common.model.unit.Collection.shouldContainNoNulls}": "Collection should not contain any empty values",
    "{fi.helsinki.otm.common.model.unit.ValidAssessmentItemSnapshot}": "Assessment items cannot be edited in different versions",
    "{fi.helsinki.otm.common.model.unit.ValidCourseUnitCode}": "The given code is already in use. The code must be unique.",
    "{fi.helsinki.otm.common.model.unit.ValidEntityWithCurriculumPeriodsValidity}": "Validity period should be within the selected curriculum period",
    "{fi.helsinki.otm.common.validation.FieldsNotNullWhenConditionTrue}": "Fields '{{fields}}' must have a value if '{{condition}}'",
    "{fi.helsinki.otm.common.validation.RuleDuplicateCheck}": "The same course or study module cannot be added to a study structure with only a selection rule in between.",
    "{fi.helsinki.otm.common.validation.ValidCourseUnitCredits} {assessmentItemCreditsShouldBeWithinCreditsForEachCompletionMethod}": "The credits of all the assessment items combined must be equal to the credits of the completion method",
    "{fi.helsinki.otm.common.validation.ValidCourseUnitVersion}": "There can only be one course per curriculum period",
    "{fi.helsinki.otm.common.validation.ValidModuleVersion}": "There can only be one study module per curriculum period",
    "{fi.helsinki.otm.common.validation.fieldsOrdered_allowEquals}": "The value of the field '{{lesserField}}' must be equal to or smaller than the value of the field '{{greaterField}}'.",
    "{fi.helsinki.otm.common.validation.fieldsOrdered}": "The value of the field '{{lesserField}}' must be smaller than the value of the field '{{greaterField}}'.",
    "{fi.helsinki.otm.common.validation.localizedFieldLangs}": "Field {{subsetLangsField}} cannot have content in a language that the field {{allLangsField}} does not contain",
    "{fi.helsinki.otm.common.validation.localizedStringSize}": "Min {{minSize}} and max {{maxSize}} characters",
    "{fi.helsinki.otm.common.validation.someFieldsNotNull}": "A minimum of {{minNull}} and a maximum of {{maxNull}} of the following fields can be left empty: {{fields}}",
    "{fi.helsinki.otm.common.validation.universityOrganisations}": "The field {{organisationsProperty}} can only include organisations within universities listed in the field {{universitiesProperty}}.",
    "{fi.helsinki.otm.common.validation.validStudyEvent.cancellationShouldMatchEventDate}": "Cancelled events must coincide with the event dates",
    "{fi.helsinki.otm.common.validation.validStudyEvent.exceptionShouldMatchEventDate}": "Deleted events must coincide with the event dates.",
    "{fi.helsinki.otm.common.validation.validStudyEvent.recursUntilMaxDateExceeded}": "The maximum duration of a recurrence is one year.",
    "{fi.helsinki.otm.common.validation.validStudyEvent.recursUntilMustBeAfterStartTime}": "End date must be after the start date",
    "{fi.helsinki.otm.common.validation.validStudyEvent.recursUntilMustBeNullIfRecursEveryIsNever}": "An end date cannot be set if the event is not recurring.",
    "{fi.helsinki.otm.common.validation.validStudyEvent.recursUntilMustFallOnEventDate}": "End date must fall on a study event date",
    "{fi.helsinki.otm.kori.validation.assessmentItemId}": "No assessment item found",
    "{fi.helsinki.otm.kori.validation.attainmentId}": "No credit found",
    "{fi.helsinki.otm.kori.validation.buildingId}": "No building found",
    "{fi.helsinki.otm.kori.validation.courseUnitGroupId}": "No course with the group ID found",
    "{fi.helsinki.otm.kori.validation.courseUnitId}": "No course found",
    "{fi.helsinki.otm.kori.validation.courseUnitRealisationId}": "No implementation found",
    "{fi.helsinki.otm.kori.validation.curriculumPeriodId}": "No curriculum period found",
    "{fi.helsinki.otm.kori.validation.duplicateCurriculumPeriodId}": "A version already exists in the selected curriculum period.",
    "{fi.helsinki.otm.kori.validation.educationId}": "No education found",
    "{fi.helsinki.otm.kori.validation.endDateRequired}": "End date is required",
    "{fi.helsinki.otm.kori.validation.gradeScaleId}": "No grading scale found",
    "{fi.helsinki.otm.kori.validation.leafCodeUrn}": "Should be a code in the lowest level of the code hierarchy",
    "{fi.helsinki.otm.kori.validation.locationId}": "No category found",
    "{fi.helsinki.otm.kori.validation.moduleGroupId}": "No study module found with this group ID",
    "{fi.helsinki.otm.kori.validation.moduleId}": "No study module found",
    "{fi.helsinki.otm.kori.validation.organisationId}": "No organisation found",
    "{fi.helsinki.otm.kori.validation.organisations.ValidSetOfOrganisationRoleShare.shareSum}": "The total sum of the organisations' responsibilities must be 100%",
    "{fi.helsinki.otm.kori.validation.planId}": "No study plan found",
    "{fi.helsinki.otm.kori.validation.publicPersonId}": "No person found",
    "{fi.helsinki.otm.kori.validation.studyEventId}": "No study event found",
    "{fi.helsinki.otm.kori.validation.studyModule.gradeScaleId}": "A study module that is graded must have a grading scale.",
    "{fi.helsinki.otm.kori.validation.studyPeriodTemplateId}": "No study period found",
    "{fi.helsinki.otm.kori.validation.urnCode}": "No URN code found",
    "{fi.helsinki.otm.kori.validation.ValidApprovalState}": "System error. Contradicting values in the document and approval state.",
    "{fi.helsinki.otm.kori.validation.ValidOID.invalidFormat}": "Invalid format",
    "{fi.helsinki.otm.kori.validation.ValidOID.isBlank}": "Cannot be blank",
    "{fi.helsinki.otm.kori.validation.ValidOID.tooLong}": "Too long",
    "{fi.helsinki.otm.kori.validation.ValidOppijaID.invalidOppijaIdChecksum}": "Incorrect verification sum in the last digits",
    "{fi.helsinki.otm.kori.validation.ValidOppijaID.shouldStartWithOppijaOidPrefix}": "Should start with a valid learner ID prefix",
    "{fi.helsinki.otm.kori.validation.ValidOppijaID.suffixLenghtShouldBe11AndContainOnlyNumbers}": "The last characters should only contain numbers",
    "{fi.helsinki.otm.kori.validation.ValidCourseUnitRealisationStudyGroupSets.studyEventDatesMustBeWithinCourseUnitRealisationDates}": "Timing of study events must coincide with the teaching time frame of the implementation.",
    "{fi.helsinki.otm.kori.validation.ValidCourseUnitRealisationStudyGroupSets.studySubGroupLocalIdsMustBeUniqueWithinCourseUnitRealisation}": "Study group IDs must be unique within the implementation.",
    "{fi.helsinki.otm.kori.validation.ValidFlowState}": "Course implementation is in an invalid state.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitAssessmentItems.assessmentItemOrderContainsIdsThatAreNotUsedInAnyCompletionMethod}": "All assessment items must be attached to at least one completion method",
    "{fi.helsinki.otm.kori.validation.organisations.ValidSetOfOrganisationRoleShare.validityPeriods}": "The time frames should form an uninterrupted timeline",
    "{fi.helsinki.otm.kori.validation.startDateRequired}": "Start date is required",
    "{fi.helsinki.otm.kori.validation.entityWithCurriculumPeriods.EntityUniversitiesDoNotIncludeCurriculumPeriod}": "The Curriculum periods field can only contain curriculum periods of the university specified in the Universities field.",
    "{fi.helsinki.otm.kori.validation.CodeUrn.invalidFormat}": "Code IDs can only consist of lower case letters, numbers, and hyphens. Hyphens can only be included one at a time and in the middle of the code.",
    "{fi.helsinki.otm.kori.validation.CurriculumPeriod}": "The validity period of an academic year must be divided into the total number of curriculum periods. A curriculum period must be divided into the total number of academic terms.",
    "{fi.helsinki.otm.kori.validation.entityWithCurriculumPeriods.HasCurriculumPeriodsForMultipleStudyYearTemplate}": "All selected curriculum periods must fit within the university's academic year.",
    "{fi.helsinki.otm.osuva.validation.validCourseUnitRealisationSelection}": "Study group selections must be attached to the selected course implementation",
    "{fi.helsinki.otm.kori.validation.ValidCourseUnitRealisationStudyGroupSets.subGroupRangeMaxShouldBeInsideStudySubGroupsSize}": "The maximum value must be between 1 and the number of study groups",
    "{fi.helsinki.otm.kori.validation.ValidCourseUnitRealisationStudyGroupSets.subGroupRangeMaxShouldBeLessOrEqualWithMin}": "The maximum value must exceed the minimum value",
    "{fi.helsinki.otm.kori.validation.ValidCourseUnitRealisationStudyGroupSets.subGroupRangeMinShouldBeInsideStudySubGroupsSize}": "The minimum value must be between 0 and the number of study groups",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.tooManyPrimaryLearningEnvironmentsForLanguage}": "Each language can only have one primary learning environment.",
    "{fi.helsinki.otm.kori.validation.ValidCourseUnitRealisationStudyGroupSets.subGroupRangeMaxShouldBeGreaterOrEqualWithMin}": "The maximum value must be equal to or bigger than the minimum value",
    "{fi.helsinki.otm.kori.validation.ValidEducationStructure.allowedPathNotInEducationStructure}": "The permissible learning opportunity cannot be found in the education structure",
    "{fi.helsinki.otm.ori.validation.ValidStudyRight.learningOpportunityNotPresent}": "The selected learning opportunity cannot be found in the education",
    "{fi.helsinki.otm.ori.validation.ValidStudyRight.selectionPathNotInEducationStructure}": "The selected learning opportunity cannot be found in the education",
    "{fi.helsinki.otm.ori.validation.ValidStudyRight.selectionPathNotInLearningOpportunity}": "The selected path is not allowed in the learning opportunity",
    "{fi.helsinki.otm.ori.validation.validAttainmentStudyRightAndTermRegistrations}": "Student must have an active study right on attainment date or on credit transfer date. Student cannot have a non-attending term registration. Information will be checked against the snapshot of the attainment date or of the credit transfer date.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.responsibilityInfosMustIncludePersonsThatAreIncludedInUniversityOrganisations}": "Responsible persons must be staff members of the universities responsible for the course.",
    "{fi.helsinki.otm.common.validation.validStringList.nullValue}": "String cannot be undefined",
    "{fi.helsinki.otm.common.validation.validStringList.tooLong}": "String is too long",
    "{fi.helsinki.otm.common.validation.validStringList.tooShort}": "String is not long enough",
    "moduleContentApplicationWithEmptySelectionsNotAllowed": "The selections in the content approval application cannot be empty",
    "{fi.helsinki.otm.common.validation.ValidTermRegistration.statutoryAbsenceAllowedOnlyForNonAttending}": "Only academic terms where the student has enrolled as non-attending can be marked as statutory absences",
    "{fi.helsinki.otm.common.validation.validPlan.learningOpportunityNotPresent}": "The selected learning opportunity cannot be found in the education",
    "FirstNameIsMandatoryForFinnishCitizens": "First name is required for Finnish citizens",
    "FirstOrLastNameIsMandatory": "Either a first or last name is required",
    "FirstOrLastNameIsMandatoryForNonFinnishCitizens": "Either a first or last name is required",
    "LastNameIsMandatoryForFinnishCitizens": "Last name is required for Finnish citizens",
    "{fi.helsinki.otm.common.validation.ValidCompetency.formalCompetenceMustHaveACode}": "A formal competence must have a code.",
    "{fi.helsinki.otm.common.validation.ValidQualification.formalQualificationMustHaveACode}": "A formal qualification must have a code.",
    "{fi.helsinki.otm.common.validation.ValidRequirement.mustContainAtLeastOneRequirement}": "The requirement group must contain at least one requirement.",
    "{fi.helsinki.otm.common.validation.ValidTermRegistrationPeriod.invalidStudyTermLocators}": "The semesters attached to the registration period are from the wrong academic year.",
    "{fi.helsinki.otm.common.validation.ValidRequirementCollection.mayNotBeEmpty}": "The requirement group cannot be empty.",
    "{fi.helsinki.otm.common.validation.ValidStudyRightExtension.applicationIdAndGrantReasonMissing}": "Either fill in the reason for the extension or provide a reference to a study right extension application.",
    "{fi.helsinki.otm.common.validation.ValidStudyRightExtensionApplication.conflictingInfoInApplication}": "There are inconsistencies between the application and the study right and study plan attached to it.",
    "{fi.helsinki.otm.common.validation.qualification.mustContainAtLeastOnePublishedRequirement}": "Qualifications must have at least one requirement group.",
    "{fi.helsinki.otm.ori.validation.ValidStudyRight.cancellationDateInFuture}": "The cancellation date cannot be in the future.",
    "{fi.helsinki.otm.ori.validation.ValidStudyRight.minorSelectionDuplicateModuleGroupIds}": "Study right expanding selections cannot contain references to the same degree programme",
    "{fi.helsinki.otm.ori.validation.ValidStudyRight.minorSelectionEndDateOutsideStudyRight}": "The validity of study right expanding selections cannot end after the validity of the study right ends",
    "{fi.helsinki.otm.ori.validation.ValidStudyRight.minorSelectionNotAllowedWithNonDegreeEducation}": "Study right expanding selections cannot be attached to non-degree study rights",
    "{fi.helsinki.otm.ori.validation.NotEmptyAcceptorPersons}": "Approver is required.",
    "{fi.helsinki.otm.kori.validation.atLeastOneResponsibilityTeacher}": "Responsible teacher is required",
    "{fi.helsinki.otm.common.validation.ValidRecommendation.responsiblePersonIsRequired}": "Recommender is required if a recommendation has been given.",
    "{fi.helsinki.otm.common.validation.ValidRecommendation.responsiblePersonTitleIsRequired}": "Title of the recommender is required if a recommendation has been given.",
    "{fi.helsinki.otm.common.validation.ValidStudyRightExtensionApplication.canApplyForExtensionOnlyOnLastTerm}": "You can only apply for an extension during the last semester of your study right.",
    "{fi.helsinki.otm.common.validation.ValidStudyRightExtensionApplication.canOnlyApplyExtensionForPrimaryPlan}": "You can only apply for an extension based on the primary study plan.",
    "{fi.helsinki.otm.common.validation.ValidStudyRightExtensionApplication.multipleActiveStudyRightExtensionApplicationsForStudyRightNotAllowed}": "You can only have one active extension application per study right.",
    "{fi.helsinki.otm.common.validation.ValidStudyRightExtensionApplication.onlyActiveOrPassiveStateStudyRightCanBeAppliedForExtension}": "You can only apply for an extension for an inactive or active study right.",
    "{fi.helsinki.otm.common.validation.ValidStudyRightExtensionApplication.onlyEducationsOfTypeDegreeEducationAreEligibleForExtensionApplication}": "You can only apply for an extension for an education leading to a degree.",
    "{fi.helsinki.otm.common.validation.ValidStudyRightExtensionApplication.attainedCreditSumMismatch}": "The credits in the extension application do not correspond to the target credits of the degree programme.",
    "{fi.helsinki.otm.common.validation.ValidStudyRightExtensionApplication.onlyValidPrimaryAttainmentsAreAllowed}": "All the completed credits included in the application must be approved and valid course credits or custom credits.",
    "{fi.helsinki.otm.common.validation.validEventOverride.eventOverrideMustHaveAChange}": "Event-specific information must include changes to the teacher, location, or some other information.",
    "{fi.helsinki.otm.common.validation.validStudyEvent.overrideShouldMatchEventDate}": "Event-specific date must coincide with the event dates.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.enrolmentAdditionalCancellationMustEndBeforeActivityPeriodEnd}": "The extended cancellation period must end before the implementation ends.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.enrolmentAdditionalCancellationMustNotEndBeforeEnrolmentPeriodEnd}": "The extended cancellation period cannot end before the enrolment period ends.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.enrolmentMustEndBeforeActivityPeriodStart}": "The enrolment period must end before the implementation starts.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.lateEnrolmentMustEndBeforeActivityPeriodEnd}": "The late enrolment period must end before the implementation ends.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.lateEnrolmentMustNotEndBeforeEnrolmentPeriodEnd}": "The late enrolment period cannot end before the enrolment period ends.",
    "{fi.helsinki.otm.common.model.module.Education.missingSpecialisationStudiesClassification}": "Specialisation studies classification missing.",
    "{fi.helsinki.otm.common.model.module.Education.unwantedSpecialisationStudiesClassification}": "Specialisation studies classifications can only be defined for educations with the type Specialisation studies.",
    "{fi.helsinki.otm.common.validation.ValidStudyRightExtensionApplication.allAttainmentsMustBelongToTheStudent}": "All credits attached to the application must belong to the student who submitted the application.",
    "{fi.helsinki.otm.kori.validation.atLeastOneResponsibilityCourseTeacher}": "Responsible teacher is required.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.enrolmentAdditionalCancellationEndMustBeNullWhenContinuousEnrolmentIsTrue}": "Enrolments with direct confirmation cannot have an extended cancellation period.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.lateEnrolmentEndDateMustBeNullWhenContinuousEnrolmentIsTrue}": "The end date of the late enrolment period cannot be defined for enrolments with direct confirmation.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.withContinuousEnrolmentEnrolmentPeriodEndMustEndBeforeActivityPeriodEnd}": "The enrolment period of an enrolment with direct confirmation must end before the implementation begins.",
    "{fi.helsinki.otm.ori.validation.ValidHierarchicalModuleContent.attainmentsNotAttainedBySamePerson}": "All credits attached to the study module must belong to the same student.",
    "{fi.helsinki.otm.ori.validation.ValidPersonalisedModule.IncludesEmptyModules}": "A personalised module structure cannot be published if it contains empty study modules.",
    "{fi.helsinki.otm.ori.validation.ValidPersonalisedModule.archivingInfoMissing}": "When a personalised module structure is archived, information on the person who archived the structure and when it was archived needs to be included.",
    "{fi.helsinki.otm.ori.validation.ValidPersonalisedModule.moduleGroupIdNotInAcceptedPaths}": "A personalised module structure can only be made for a module which has been confirmed in the student's study right.",
    "{fi.helsinki.otm.ori.validation.ValidPersonalisedModule.noValidStudyRight}": "The personalised module structure must be attached to a valid study right.",
    "{fi.helsinki.otm.ori.validation.ValidPersonalisedModule.publishingInfoMissing}": "When a personalised module structure is published, information on the person who published the structure and when it was published needs to be included.",
    "{fi.helsinki.otm.ori.validation.ValidPersonalisedModule.stateOrDocumentStateIsNotValid}": "The state and documentState attributes of the personalised module structure are inconsistent with each other, or the attributes are missing.",
    "{org.hibernate.validator.constraints.time.DurationMin.message}": "Duration is too short.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.teachingLanguageUrnIsMandatoryIfCourseUnitRealisationTypeUrnIsNotOfExamType}": "Language of instruction is mandatory for other than those with implementation type as examination.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.studyEventDoesNotExist}": "The study event attached to the implementation does not exist.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.startTimeDoesNotMatchMassExamSession}": "The date of the study event does not correspond with the mass examination session.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.recursEveryDiffersFromNever}": "Study event has been marked as recurring although it has been attached to a mass examination.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.numberOfStudySubGroupsDiffersFromOne}": "No more or less than one teaching group in the structure of the implementation that is attached to a mass examination.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.numberOfStudyGroupSetsDiffersFromOne}": "No more or less than one selection group in the structure of the implementation that is attached to a mass examination.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.numberOfStudyEventIdsDiffersFromOne}": "No more or less than one study event in the structure of the implementation that is attached to a mass examination.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.numberOfAssessmentItemIdsDiffersFromOne}": "No more or less than one assessment item in the implementation that is attached to a mass examination.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.massExamSessionNameDoesNotMatchMassExamSession}": "The mass examination title in the implementation information does not correspond with the mass examination.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.enrolmentPeriodDoesNotMatchMassExamSession}": "Enrolment period in the implementation does not correspond with the mass examination.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.enrolmentAdditionalCancellationEndDoesNotMatchMassExamSession}": "The extended enrolment period of the implementation does not correspond with the mass examination.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.durationDoesNotMatchMassExamSession}": "Duration of the implementation does not correspond with the mass examination.",
    "{fi.helsinki.otm.kori.validation.ValidMassExamSessionId}": "The mass examination session does not exist",
    "{fi.helsinki.otm.kori.validation.ValidMassExamSession.enrolmentPeriodEndAfterSessionStart}": "The enrolment period must end before the mass exam session starts.",
    "{fi.helsinki.otm.kori.validation.ValidMassExamSession.enrolmentAdditionalCancellationEndBeforeEnrolmentPeriodEnd}": "The extended enrolment cancellation period must end before the mass exam session starts.",
    "{fi.helsinki.otm.kori.validation.ValidMassExamSession.enrolmentAdditionalCancellationEndAfterSessionStart}": "The extended enrolment cancellation period must end before the mass exam session starts.",
    "{fi.helsinki.otm.common.validation.sanitizedString}": "The string includes forbidden elements",
    "{fi.helsinki.otm.common.validation.markupStringSize}": "Min {{minSize}} and max {{maxSize}} characters. Please note that formatting text increases character count.",
    "{fi.helsinki.otm.common.validation.validEnrolment.suitableOrPrimaryStudySubGroupAmountMustBeGreaterOrEqualToStudyGroupSetRangeMin}": "There are not enough teaching group selections.",
    "{fi.helsinki.otm.common.validation.validEnrolment.studySubGroupMustBeUnique}": "Teaching group selections must be unique.",
    "{fi.helsinki.otm.common.validation.validEnrolment.primaryStudySubGroupAmountMustBeLessThanOrEqualToStudyGroupSetRangeMax}": "There are too many primary teaching group selections.",
    "{fi.helsinki.otm.common.validation.validEnrolment.primaryStudySubGroupAmountMustBeGreaterThanOrEqualToStudyGroupSetRangeMin}": "There are not enough primary teaching group selections.",
    "{fi.helsinki.otm.common.validation.validEnrolment.courseUnitRealisationDoesNotHaveAnyStudySubGroups}": "The implementation has no teaching groups.",
    "{fi.helsinki.otm.common.validation.validEnrolment.courseUnitIdMustNotBeNullUnlessStateIsNotEnrolled}": "Course is mandatory information.",
    "{fi.helsinki.otm.common.validation.validEnrolment.assessmentItemIdMustNotBeNullUnlessStateIsNotEnrolled}": "Assessment item is mandatory information.",
    "{fi.helsinki.otm.common.validation.validEnrolment.EnrolmentStateMustMatchProcessingState}": "False state in enrolment.",
    "{fi.helsinki.otm.common.validation.validEnrolment.EnrolmentDateTimeMustNotBeNullUnlessStateIsNotEnrolled}": "Information on enrolment period is mandatory.",
    "{fi.helsinki.otm.common.validation.validStudyEvent.overrideDatesShouldBeUnique}": "Dates in study events must be unique.",
    "{fi.helsinki.otm.common.validation.ValidOrganisationRoleShare.missingOrganisationIdOrEducationalInstitutionUrn}": "Information on organisation or educational institution missing.",
    "{fi.helsinki.otm.common.validation.ValidOrganisationRoleShare.onlyOrganisationIdOrEducationalInstitutionUrnAllowed}": "Only organisation or educational institution allowed",
    "{fi.helsinki.otm.common.validation.ValidOrganisationRoleShare.organisationIdRequiredForResponsibleOrganisationRole}": "Responsible organisation must be an organisation.",
    "{fi.helsinki.otm.common.validation.validPlan.parentModuleIdCanNotEqualPlanRootId}": "Study draft cannot be added to the study plan without a degree programme or a study module",
    "{fi.helsinki.otm.kori.validation.organisations.OrganisationRoleShareBase.shouldHaveAtLeastOneResponsibleOrganisation}": "At minimum one organisation must be the responsible organisation.",
    "{fi.helsinki.otm.common.model.admissiontarget.ValidAdmissionTargetCode.admissionTargetCodeMustBeUniqueWithinUniversity}": "Application option code must be unique.",
    "{fi.helsinki.otm.common.validation.validEnrolment.studyRightNotForEnrolledStudent}": "Study right does not belong to the enrolled student.",
    "{fi.helsinki.otm.kori.validation.ValidEducationStructureEducationClassificationUrns.phase1EducationClassificationUrnRequired}": "Required in degree education",
    "{fi.helsinki.otm.kori.validation.ValidEducationStructureEducationClassificationUrns.phase2EducationClassificationUrnRequired}": "Required in two-phased degree education",
    "{fi.helsinki.otm.ori.validation.ValidAttainment.creditTransferInfoForAttained}": "Credit transfer information is not allowed for a regular attainment.",
    "{fi.helsinki.otm.ori.validation.ValidCreditTransferInfo.unnecessaryInternationalInstitutionUrn}": "International organisation cannot be determined if the credit transfer info includes a Finnish education institution.",
    "{fi.helsinki.otm.ori.validation.ValidMobilityPeriod.inboundMobilityPeriodExistsForStudyRight}": "Study right may include max. 1 incoming mobility period.",
    "{fi.helsinki.otm.ori.validation.ValidMobilityPeriod.missingOrganisation}": "Organisation is a mandatory field when foreign university is not defined.",
    "{fi.helsinki.otm.ori.validation.ValidPersonalizedPhase.childNamingUrn}": "The Naming selection points must be selected for there are selection points in the education phase.",
    "{fi.helsinki.otm.ori.validation.ValidPersonalizedSelectionPath.phase1}": "Bachelor's education must be personalised",
    "{fi.helsinki.otm.common.validation.ValidStudyRightExtensionApplication.snapshotDateTimeOfDraftCannotBeInFuture}": "Start date of a draft-state study right snapshot cannot be in future.",
    "{fi.helsinki.otm.common.validation.ValidStudyRightExtensionApplication.snapshotDateTimeOfOnlySnapshotCannotBeInFuture}": "Start date of the only snapshot of a study right cannot be in future.",
    "{fi.helsinki.otm.ori.validation.ValidStudyRight.acceptedSelectionPathNotEqualToPersonalizedSelectionPath}": "Personalised education path is not coherent with the accepted education path.",
    "{fi.helsinki.otm.ori.validation.ValidStudyRight.moduleSelectionNotAllowedWithDegreeEducation}": "Other confirmed selections in the study right are not allowed in the study right related to an education leading to a degree.",
    "{fi.helsinki.otm.ori.validation.ValidStudyRight.municipalityRequiredForTwoLevelStudyRight}": "Education location needs to be defined to the second phase of a two-phased degree education.",
    "{fi.helsinki.otm.common.validation.ValidTuitionFeeObligationPeriod.validityNotInsideStudyRightValidity}": "Tuition fee period must take place within the study right validity period.",
    "{fi.helsinki.otm.common.validation.ValidTuitionFeeObligationPeriod.validityOverlapsWithOtherPeriod}": "Tuition fee period cannot overlap with other tuition fee periods.",
    "{fi.helsinki.otm.common.validation.qualification.customQualificationMustHaveCustomQualificationType}": "Other proficiencies must have other proficiency type.",
    "{fi.helsinki.otm.common.validation.qualification.formalQualificationMustNotHaveCustomQualificationType}": "Formal qualification cannot have other proficiency type",
    "{fi.helsinki.otm.common.validation.validOpenUniversityCart.activated.containsNoItems}": "Shopping trolley cannot be activated unless it contains items.",
    "{fi.helsinki.otm.common.validation.validOpenUniversityCart.activated.priceUndefined}": "Shopping trolley cannot be activated because the total price has not been defined.",
    "{fi.helsinki.otm.common.validation.validOpenUniversityCart.activated.purchaseDateTimeUndefined}": "Shopping trolley cannot be activated unless time of purchase has been defined.",
    "{fi.helsinki.otm.common.validation.validOpenUniversityCart.activated.studentIdUndefined}": "Shopping trolley cannot be activated unless the student ID has been defined.",
    "{fi.helsinki.otm.common.validation.validOpenUniversityCart.expired.activationCodeValidUntilInFuture}": "Shopping trolley cannot be expired if the activation code has not been expired.",
    "{fi.helsinki.otm.common.validation.validOpenUniversityCart.expired.reservedUntilDateTimeInFuture}": "Shopping trolley cannot be expired if the reservation validity period has not been expired.",
    "{fi.helsinki.otm.common.validation.validOpenUniversityCart.purchased.activationCodeUndefined}": "Shopping trolley cannot be in state purchased if the activation code is undefined.",
    "{fi.helsinki.otm.common.validation.validOpenUniversityCart.purchased.buyerEmailUndefined}": "Shopping trolley cannot be purchased if purchaser's email address has not been defined.",
    "{fi.helsinki.otm.common.validation.validOpenUniversityCart.purchased.buyerNameUndefined}": "Shopping trolley cannot be purchased if purchaser's name has not been defined.",
    "{fi.helsinki.otm.common.validation.validOpenUniversityCart.purchased.containsNoItems}": "Shopping trolley cannot be purchased unless it contains items.",
    "{fi.helsinki.otm.common.validation.validOpenUniversityCart.purchased.priceUndefined}": "Shopping trolley cannot be purchased unless the total price of the items has been defined.",
    "{fi.helsinki.otm.common.validation.validOpenUniversityCart.purchased.purchaseDateTimeUndefined}": "Shopping trolley cannot be in state purchased unless time of purchase has been defined.",
    "{fi.helsinki.otm.common.validation.validOpenUniversityCart.purchased.studentEmailUndefined}": "Shopping trolley cannot be purchased unless the student's email address has been defined.",
    "{fi.helsinki.otm.common.validation.validOpenUniversityCart.purchased.studentNameUndefined}": "Shopping trolley cannot be purchased unless the student's name has been defined.",
    "{fi.helsinki.otm.common.validation.validOpenUniversityCart.reserved.containsNoItems}": "Shopping trolley cannot be in state reserved unless it contains items.",
    "{fi.helsinki.otm.common.validation.validOpenUniversityCart.reserved.reservedUntilDateTimeNotDefined}": "Shopping trolley cannot be in state reserved unless the expiry time of the reservation has been defined.",
    "{fi.helsinki.otm.ori.validation.QualificationIncludeCompetenciesValidator.withCompetenceUrnNoIncludeCompetencies}": "If a qualification is based on a competence code, it is not possible to attach defining competencies to the qualification.",
    "{fi.helsinki.otm.ori.validation.ValidInternationalContractualDegree.degreeNameIsMandatoryForDoubleAgreement}": "Degree title is required in a double degree",
    "{fi.helsinki.otm.ori.validation.ValidLukuvuosiMaksuMaksettuStatus}": "Field hakemus.lukuvuosimaksu must be one of the following: [\"MAKSETTU\", \"MAKSAMATTA\", \"VAPAUTETTU\", \"\"]",
    "{fi.helsinki.otm.ori.validation.ValidLukuvuosiMaksuVelvollisuusStatus}": "Field hakemus.hKelpoisuusMaksuvelvollisuus must be one of the following: [\"REQUIRED\", \"NOT_REQUIRED\", \"NOT_CHECKED\", \"\"]",
    "{fi.helsinki.otm.ori.validation.ValidQualification.oneOfCompetencyUrnOrQualificationUrnIsRequired}": "Qualification must be attached to either a qualification code or a competence code",
    "{fi.helsinki.otm.ori.validation.ValidQualification.onlyOneOfCompetencyUrnOrQualificationUrnIsAllowed}": "Qualification can be attached to either a qualification code or a competence code, not to both.",
    "{fi.helsinki.otm.ori.validation.ValidStudyRight.notAllowedEndingInStudyRightId}": "Ending in study right ID is not allowed",
    "{fi.helsinki.otm.ori.validation.ValidStudyRight.phase2ContractualDegreeForOnePhasedStudyRight}": "International collaboration agreement included to the one-phased study right",
    "{fi.helsinki.otm.ori.validation.ValidQualification.customQualificationMustNotHaveCompetencyUrn}": "Competence code cannot be set to other proficiency.",
    "{fi.helsinki.otm.ori.validation.ValidQualification.customQualificationMustNotHaveQualificationUrn}": "Qualification code cannot be set to other proficiency.",
    "{fi.helsinki.otm.common.model.courseunit.ValidCompletionMethod.openUniversityCompletionMethodTotalCreditsCanNotBeRange}": "Credit in an Open University completion method has to be a whole number, not a range.",
    "{fi.helsinki.otm.common.model.unit.OrganisationCode}": "Organisation code must be unique",
    "{fi.helsinki.otm.common.validation.ValidCourseUnitSubstitutions.duplicateCourseUnitGroupsInSubstitution}": "Course substitute cannot include duplicate course references.",
    "{fi.helsinki.otm.common.validation.ValidCourseUnitSubstitutions.duplicateSubstitution}": "Course substitutions must be unique in course references.",
    "{fi.helsinki.otm.ori.validation.ValidStudyRight.overlappingStudyRightCourseUnitSelections}": "Same course cannot be confirmed multiple times to a study right if the course is valid simultaneously.",
    "{fi.helsinki.otm.ori.validation.ValidStudyRight.overlappingStudyRightModuleSelections}": "Same study module cannot be confirmed multiple times to a study right if the study module is valid simultaneously.",
    "{fi.helsinki.otm.ori.validation.ValidStudyRight.internationalContractualDegreeNotAllowedWithNonDegreeEducation}": "Non-degree study right cannot include collaboration degrees.",
    "{fi.helsinki.otm.common.validation.validGrant.PersonIdNotSameAsInStudyRight}": "PersonId must match the personId in the study right",
    "{fi.helsinki.otm.common.validation.validGrant.StudyTermNotInStudyRightValidityPeriod}": "Scholarship can be granted to cover only the study right validity period",
    "{fi.helsinki.otm.common.validation.validPlan.noDuplicateModuleIdsAllowedInModuleSelections}": "No duplicate module IDs allowed in module selections",
    "{fi.helsinki.otm.common.validation.validPlan.noDuplicateCustomStudyDraftIdsAllowedInPlan}": "No duplicate study draft IDs allowed in study plan",
    "{fi.helsinki.otm.common.validation.validPlan.noDuplicateCustomModuleAttainmentIdsAllowedInCustomModuleAttainmentSelections}": "No duplicate custom module attainment IDs allowed in custom module attainment selections",
    "{fi.helsinki.otm.common.validation.validPlan.noDuplicateCustomCourseUnitAttainmentIdsAllowedInCustomCourseUnitAttainmentSelections}": "No duplicate custom course unit attainment IDs allowed in custom course unit attainment selections",
    "{fi.helsinki.otm.common.validation.validPlan.noDuplicateCourseUnitIdsAllowedInCourseUnitSelections}": "No duplicate course unit IDs allowed in course selections",
    "{fi.helsinki.otm.common.validation.validRootOrganisation.rootStatusMayNotBeChanged}": "Root organisation cannot be changed to a regular organisation or vice versa",
    "{fi.helsinki.otm.common.validation.validTuitionFeeObligationPeriod.ValidityOverlapsWithOtherPeriod}": "One study right cannot include multiple tuition fee periods that are valid at the same time.",
    "{fi.helsinki.otm.common.validation.validTuitionFeeObligationPeriod.tuitionFeeObligationCanNotBeSet}": "Tuition fee period cannot be added since the education type is 'fee-based education'.",
    "{fi.helsinki.otm.kori.validation.qualificationId}": "No qualification found",
    "{fi.helsinki.otm.ori.validation.ValidAttainedQualification.mustReferencePassedAttainments}": "Attained qualification must refer to passed attainments",
    "{fi.helsinki.otm.ori.validation.ValidAttainedQualification.onlyCompetencyCanHaveCredits}": "Only attained competence can have credits",
    "{fi.helsinki.otm.ori.validation.ValidAttainedQualification.qualificationStateNotReady}": "Qualification state cannot be NOT_READY",
    "{fi.helsinki.otm.ori.validation.ValidQualification.competencyMustHaveCompetencyUrn}": "Competence code must be set to a competence.",
    "{fi.helsinki.otm.ori.validation.ValidStudyRight.funding_source_not_changeable}": "Study right with tuition fee periods cannot be marked as fee-based commissioned education",
    "{fi.helsinki.otm.ori.validation.ValidStudyRight.homeOrganisationNeededForAgreementStudies}": "Home organisation must be defined if the education type is agreement-based education.",
    "{fi.helsinki.otm.ori.validation.ValidStudyRight.homeOrganisationNotAllowed}": "Home organisation can not be defined if the education type is other than agreement-based education.",
    "{fi.helsinki.otm.ori.validation.ValidStudyRightTermRegistrations.duplicateLocalIdsNotAllowed}": "Duplicate localIds not allowed in studyRightTermRegistrations.termRegistrations.",
    "{fi.helsinki.otm.ori.validation.ValidStudyRightTermRegistrations.duplicateStudyTermsNotAllowed}": "Duplicate studyTerms not allowed in studyRightTermRegistrations.termRegistrations.",
    "{fi.helsinki.otm.ori.validation.attainedQualificationId}": "No attained qualification found",
    "{fi.helsinki.otm.ori.validation.validDegreeProgrammeAttainmentStudyRight}": "Degree programme attainment must be attached to an active study right.",
    "{fi.helsinki.otm.ori.validation.validAttainmentStudyRight}": "To register the attainment, student must have an active study right.",
    "{fi.helsinki.otm.tasku.validation.ValidFilename.invalidFilename}": "Invalid file name. Name can only include capitals and lowercase letters, numbers, spaces and characters - . and _",
    "{fi.helsinki.otm.common.validation.validAttainmentStudyRightId}": "Study right related to the attainment is not valid.",
    "{fi.helsinki.otm.kori.validation.StudyRightId}": "Information on study right must refer to an actual study right.",
    "{fi.helsinki.otm.ori.validation.ValidStudyRight.incorrectOrganisation}": "Organisation on study right does not correspond with universities that offer education."
}