{
    "{fi.helsinki.otm.kori.validation.assessmentItemId}": "No assessment item found",
    "{fi.helsinki.otm.kori.validation.attainmentId}": "No credit found",
    "{fi.helsinki.otm.kori.validation.buildingId}": "No building found",
    "{fi.helsinki.otm.kori.validation.courseUnitGroupId}": "No course with the group ID found",
    "{fi.helsinki.otm.kori.validation.courseUnitId}": "No course found",
    "{fi.helsinki.otm.kori.validation.courseUnitRealisationId}": "No implementation found",
    "{fi.helsinki.otm.kori.validation.curriculumPeriodId}": "No curriculum period found",
    "{fi.helsinki.otm.kori.validation.duplicateCurriculumPeriodId}": "A version already exists in the selected curriculum period.",
    "{fi.helsinki.otm.kori.validation.educationId}": "No education found",
    "{fi.helsinki.otm.kori.validation.endDateRequired}": "End date is required",
    "{fi.helsinki.otm.kori.validation.gradeScaleId}": "No grading scale found",
    "{fi.helsinki.otm.kori.validation.leafCodeUrn}": "Should be a code in the lowest level of the code hierarchy",
    "{fi.helsinki.otm.kori.validation.locationId}": "No category found",
    "{fi.helsinki.otm.kori.validation.moduleGroupId}": "No study module found with this group ID",
    "{fi.helsinki.otm.kori.validation.moduleId}": "No study module found",
    "{fi.helsinki.otm.kori.validation.organisationId}": "No organisation found",
    "{fi.helsinki.otm.kori.validation.organisations.ValidSetOfOrganisationRoleShare.shareSum}": "The total sum of the organisations' responsibilities must be 100%",
    "{fi.helsinki.otm.kori.validation.planId}": "No study plan found",
    "{fi.helsinki.otm.kori.validation.publicPersonId}": "No person found",
    "{fi.helsinki.otm.kori.validation.studyEventId}": "No study event found",
    "{fi.helsinki.otm.kori.validation.studyModule.gradeScaleId}": "A study module that is graded must have a grading scale.",
    "{fi.helsinki.otm.kori.validation.studyPeriodTemplateId}": "No study period found",
    "{fi.helsinki.otm.kori.validation.urnCode}": "No URN code found",
    "{fi.helsinki.otm.kori.validation.ValidApprovalState}": "System error. Contradicting values in the document and approval state.",
    "{fi.helsinki.otm.kori.validation.ValidOID.invalidFormat}": "Invalid format",
    "{fi.helsinki.otm.kori.validation.ValidOID.isBlank}": "Cannot be blank",
    "{fi.helsinki.otm.kori.validation.ValidOID.tooLong}": "Too long",
    "{fi.helsinki.otm.kori.validation.ValidOppijaID.invalidOppijaIdChecksum}": "Incorrect verification sum in the last digits",
    "{fi.helsinki.otm.kori.validation.ValidOppijaID.shouldStartWithOppijaOidPrefix}": "Should start with a valid learner ID prefix",
    "{fi.helsinki.otm.kori.validation.ValidOppijaID.suffixLenghtShouldBe11AndContainOnlyNumbers}": "The last characters should only contain numbers",
    "{fi.helsinki.otm.kori.validation.ValidCourseUnitRealisationStudyGroupSets.studyEventDatesMustBeWithinCourseUnitRealisationDates}": "Timing of study events must coincide with the teaching time frame of the implementation.",
    "{fi.helsinki.otm.kori.validation.ValidCourseUnitRealisationStudyGroupSets.studySubGroupLocalIdsMustBeUniqueWithinCourseUnitRealisation}": "Study group IDs must be unique within the implementation.",
    "{fi.helsinki.otm.kori.validation.ValidFlowState}": "Course implementation is in an invalid state.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitAssessmentItems.assessmentItemOrderContainsIdsThatAreNotUsedInAnyCompletionMethod}": "All assessment items must be attached to at least one completion method",
    "{fi.helsinki.otm.kori.validation.organisations.ValidSetOfOrganisationRoleShare.validityPeriods}": "The time frames should form an uninterrupted timeline",
    "{fi.helsinki.otm.kori.validation.startDateRequired}": "Start date is required",
    "{fi.helsinki.otm.kori.validation.entityWithCurriculumPeriods.EntityUniversitiesDoNotIncludeCurriculumPeriod}": "The Curriculum periods field can only contain curriculum periods of the university specified in the Universities field.",
    "{fi.helsinki.otm.kori.validation.CodeUrn.invalidFormat}": "Code IDs can only consist of lower case letters, numbers, and hyphens. Hyphens can only be included one at a time and in the middle of the code.",
    "{fi.helsinki.otm.kori.validation.CurriculumPeriod}": "The validity period of an academic year must be divided into the total number of curriculum periods. A curriculum period must be divided into the total number of academic terms.",
    "{fi.helsinki.otm.kori.validation.entityWithCurriculumPeriods.HasCurriculumPeriodsForMultipleStudyYearTemplate}": "All selected curriculum periods must fit within the university's academic year.",
    "{fi.helsinki.otm.kori.validation.ValidCourseUnitRealisationStudyGroupSets.subGroupRangeMaxShouldBeInsideStudySubGroupsSize}": "The maximum value must be between 1 and the number of study groups",
    "{fi.helsinki.otm.kori.validation.ValidCourseUnitRealisationStudyGroupSets.subGroupRangeMaxShouldBeLessOrEqualWithMin}": "The maximum value must exceed the minimum value",
    "{fi.helsinki.otm.kori.validation.ValidCourseUnitRealisationStudyGroupSets.subGroupRangeMinShouldBeInsideStudySubGroupsSize}": "The minimum value must be between 0 and the number of study groups",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.tooManyPrimaryLearningEnvironmentsForLanguage}": "Each language can only have one primary learning environment.",
    "{fi.helsinki.otm.kori.validation.ValidCourseUnitRealisationStudyGroupSets.subGroupRangeMaxShouldBeGreaterOrEqualWithMin}": "The maximum value must be equal to or bigger than the minimum value",
    "{fi.helsinki.otm.kori.validation.ValidEducationStructure.allowedPathNotInEducationStructure}": "The permissible learning opportunity cannot be found in the education structure",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.responsibilityInfosMustIncludePersonsThatAreIncludedInUniversityOrganisations}": "Responsible persons must be staff members of the universities responsible for the course.",
    "{fi.helsinki.otm.kori.validation.atLeastOneResponsibilityTeacher}": "Responsible teacher is required",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.enrolmentAdditionalCancellationMustEndBeforeActivityPeriodEnd}": "The extended cancellation period must end before the implementation ends.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.enrolmentAdditionalCancellationMustNotEndBeforeEnrolmentPeriodEnd}": "The extended cancellation period cannot end before the enrolment period ends.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.enrolmentMustEndBeforeActivityPeriodStart}": "The enrolment period must end before the implementation starts.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.lateEnrolmentMustEndBeforeActivityPeriodEnd}": "The late enrolment period must end before the implementation ends.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.lateEnrolmentMustNotEndBeforeEnrolmentPeriodEnd}": "The late enrolment period cannot end before the enrolment period ends.",
    "{fi.helsinki.otm.kori.validation.atLeastOneResponsibilityCourseTeacher}": "Responsible teacher is required.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.enrolmentAdditionalCancellationEndMustBeNullWhenContinuousEnrolmentIsTrue}": "Enrolments with direct confirmation cannot have an extended cancellation period.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.lateEnrolmentEndDateMustBeNullWhenContinuousEnrolmentIsTrue}": "The end date of the late enrolment period cannot be defined for enrolments with direct confirmation.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.withContinuousEnrolmentEnrolmentPeriodEndMustEndBeforeActivityPeriodEnd}": "The enrolment period of an enrolment with direct confirmation must end before the implementation begins.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.teachingLanguageUrnIsMandatoryIfCourseUnitRealisationTypeUrnIsNotOfExamType}": "Language of instruction is mandatory for other than those with implementation type as examination.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.studyEventDoesNotExist}": "The study event attached to the implementation does not exist.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.startTimeDoesNotMatchMassExamSession}": "The date of the study event does not correspond with the mass examination session.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.recursEveryDiffersFromNever}": "Study event has been marked as recurring although it has been attached to a mass examination.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.numberOfStudySubGroupsDiffersFromOne}": "No more or less than one teaching group in the structure of the implementation that is attached to a mass examination.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.numberOfStudyGroupSetsDiffersFromOne}": "No more or less than one selection group in the structure of the implementation that is attached to a mass examination.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.numberOfStudyEventIdsDiffersFromOne}": "No more or less than one study event in the structure of the implementation that is attached to a mass examination.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.numberOfAssessmentItemIdsDiffersFromOne}": "No more or less than one assessment item in the implementation that is attached to a mass examination.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.massExamSessionNameDoesNotMatchMassExamSession}": "The mass examination title in the implementation information does not correspond with the mass examination.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.enrolmentPeriodDoesNotMatchMassExamSession}": "Enrolment period in the implementation does not correspond with the mass examination.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.enrolmentAdditionalCancellationEndDoesNotMatchMassExamSession}": "The extended enrolment period of the implementation does not correspond with the mass examination.",
    "{fi.helsinki.otm.kori.validation.validCourseUnitRealisation.durationDoesNotMatchMassExamSession}": "Duration of the implementation does not correspond with the mass examination.",
    "{fi.helsinki.otm.kori.validation.ValidMassExamSessionId}": "The mass examination session does not exist",
    "{fi.helsinki.otm.kori.validation.ValidMassExamSession.enrolmentPeriodEndAfterSessionStart}": "The enrolment period must end before the mass exam session starts.",
    "{fi.helsinki.otm.kori.validation.ValidMassExamSession.enrolmentAdditionalCancellationEndBeforeEnrolmentPeriodEnd}": "The extended enrolment cancellation period must end before the mass exam session starts.",
    "{fi.helsinki.otm.kori.validation.ValidMassExamSession.enrolmentAdditionalCancellationEndAfterSessionStart}": "The extended enrolment cancellation period must end before the mass exam session starts.",
    "{fi.helsinki.otm.kori.validation.organisations.OrganisationRoleShareBase.shouldHaveAtLeastOneResponsibleOrganisation}": "At minimum one organisation must be the responsible organisation.",
    "{fi.helsinki.otm.kori.validation.ValidEducationStructureEducationClassificationUrns.phase1EducationClassificationUrnRequired}": "Required in degree education",
    "{fi.helsinki.otm.kori.validation.ValidEducationStructureEducationClassificationUrns.phase2EducationClassificationUrnRequired}": "Required in two-phased degree education",
    "{fi.helsinki.otm.kori.validation.qualificationId}": "No qualification found",
    "{fi.helsinki.otm.kori.validation.StudyRightId}": "Information on study right must refer to an actual study right."
}
